// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"
	json "encoding/json"

	mock "github.com/stretchr/testify/mock"
)

// RpcClient is an autogenerated mock type for the RpcClient type
type RpcClient struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *RpcClient) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Send provides a mock function with given fields: ctx, request
func (_m *RpcClient) Send(ctx context.Context, request json.RawMessage) (json.RawMessage, error) {
	ret := _m.Called(ctx, request)

	var r0 json.RawMessage
	if rf, ok := ret.Get(0).(func(context.Context, json.RawMessage) json.RawMessage); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(json.RawMessage)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, json.RawMessage) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRpcClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewRpcClient creates a new instance of RpcClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRpcClient(t mockConstructorTestingTNewRpcClient) *RpcClient {
	mock := &RpcClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
